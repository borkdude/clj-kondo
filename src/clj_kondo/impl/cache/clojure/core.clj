(ns clj-kondo.impl.cache.clojure.core)

(def cache
  (quote
   #:clojure.core{+'
                  {:fixed-arities #{0 1 2},
                   :ns clojure.core,
                   :name +',
                   :type :defn,
                   :qname clojure.core/+',
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 972},
                  decimal?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name decimal?,
                   :type :defn,
                   :qname clojure.core/decimal?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3598},
                  prependss
                  {:fixed-arities #{2},
                   :private? true,
                   :ns clojure.core,
                   :name prependss,
                   :type :defn,
                   :qname clojure.core/prependss,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5879},
                  restart-agent
                  {:ns clojure.core,
                   :name restart-agent,
                   :type :defn,
                   :qname clojure.core/restart-agent,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2177},
                  sort-by
                  {:fixed-arities #{3 2},
                   :ns clojure.core,
                   :name sort-by,
                   :type :defn,
                   :qname clojure.core/sort-by,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3119},
                  is-runtime-annotation?
                  {:fixed-arities #{1},
                   :private? true,
                   :ns clojure.core,
                   :name is-runtime-annotation?,
                   :type :defn,
                   :qname clojure.core/is-runtime-annotation?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5453},
                  macroexpand
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name macroexpand,
                   :type :defn,
                   :qname clojure.core/macroexpand,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4026},
                  ensure
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name ensure,
                   :type :defn,
                   :qname clojure.core/ensure,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2488},
                  chunk-first
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name chunk-first,
                   :type :defn,
                   :qname clojure.core/chunk-first,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 701},
                  add-annotation
                  {:fixed-arities #{3},
                   :private? true,
                   :ns clojure.core,
                   :name add-annotation,
                   :type :defn,
                   :qname clojure.core/add-annotation,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5463},
                  load-data-reader-file
                  {:fixed-arities #{2},
                   :private? true,
                   :ns clojure.core,
                   :name load-data-reader-file,
                   :type :defn,
                   :qname clojure.core/load-data-reader-file,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7804},
                  eduction
                  {:ns clojure.core,
                   :name eduction,
                   :type :defn,
                   :qname clojure.core/eduction,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7694},
                  tree-seq
                  {:fixed-arities #{3},
                   :ns clojure.core,
                   :name tree-seq,
                   :type :defn,
                   :qname clojure.core/tree-seq,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4931},
                  unchecked-remainder-int
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name unchecked-remainder-int,
                   :type :defn,
                   :qname clojure.core/unchecked-remainder-int,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1240},
                  reduce
                  {:fixed-arities #{3 2},
                   :ns clojure.core,
                   :name reduce,
                   :type :defn,
                   :qname clojure.core/reduce,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6810},
                  when-first
                  {:ns clojure.core,
                   :name when-first,
                   :type :defn,
                   :qname clojure.core/when-first,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4600},
                  find-ns
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name find-ns,
                   :type :defn,
                   :qname clojure.core/find-ns,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4126},
                  get-thread-bindings
                  {:fixed-arities #{0},
                   :ns clojure.core,
                   :name get-thread-bindings,
                   :type :defn,
                   :qname clojure.core/get-thread-bindings,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1939},
                  into1
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name into1,
                   :type :defn,
                   :qname clojure.core/into1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3415},
                  contains?
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name contains?,
                   :type :defn,
                   :qname clojure.core/contains?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1484},
                  every?
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name every?,
                   :type :defn,
                   :qname clojure.core/every?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2672},
                  keep-indexed
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name keep-indexed,
                   :type :defn,
                   :qname clojure.core/keep-indexed,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7346},
                  cond->>
                  {:ns clojure.core,
                   :name cond->>,
                   :type :defn,
                   :qname clojure.core/cond->>,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7555},
                  subs
                  {:fixed-arities #{3 2},
                   :ns clojure.core,
                   :name subs,
                   :type :defn,
                   :qname clojure.core/subs,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4981},
                  ref-min-history
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name ref-min-history,
                   :type :defn,
                   :qname clojure.core/ref-min-history,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2470},
                  set
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name set,
                   :type :defn,
                   :qname clojure.core/set,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4105},
                  take-last
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name take-last,
                   :type :defn,
                   :qname clojure.core/take-last,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2941},
                  bit-set
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name bit-set,
                   :type :defn,
                   :qname clojure.core/bit-set,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1337},
                  reader-conditional
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name reader-conditional,
                   :type :defn,
                   :qname clojure.core/reader-conditional,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7738},
                  qualified-keyword?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name qualified-keyword?,
                   :type :defn,
                   :qname clojure.core/qualified-keyword?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1642},
                  while
                  {:ns clojure.core,
                   :name while,
                   :type :defn,
                   :qname clojure.core/while,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6333},
                  throw-if
                  {:private? true,
                   :ns clojure.core,
                   :name throw-if,
                   :type :defn,
                   :qname clojure.core/throw-if,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5854},
                  line-seq
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name line-seq,
                   :type :defn,
                   :qname clojure.core/line-seq,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3085},
                  unchecked-subtract-int
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name unchecked-subtract-int,
                   :type :defn,
                   :qname clojure.core/unchecked-subtract-int,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1205},
                  take-nth
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name take-nth,
                   :type :defn,
                   :qname clojure.core/take-nth,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4288},
                  re-groups
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name re-groups,
                   :type :defn,
                   :qname clojure.core/re-groups,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4858},
                  dec'
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name dec',
                   :type :defn,
                   :qname clojure.core/dec',
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1135},
                  ns-unmap
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name ns-unmap,
                   :type :defn,
                   :qname clojure.core/ns-unmap,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4178},
                  println-str
                  {:ns clojure.core,
                   :name println-str,
                   :type :defn,
                   :qname clojure.core/println-str,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4763},
                  with-bindings*
                  {:ns clojure.core,
                   :name with-bindings*,
                   :type :defn,
                   :qname clojure.core/with-bindings*,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1973},
                  inst-ms
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name inst-ms,
                   :type :defn,
                   :qname clojure.core/inst-ms,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6787},
                  iterator-seq
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name iterator-seq,
                   :type :defn,
                   :qname clojure.core/iterator-seq,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5721},
                  check-cyclic-dependency
                  {:fixed-arities #{1},
                   :private? true,
                   :ns clojure.core,
                   :name check-cyclic-dependency,
                   :type :defn,
                   :qname clojure.core/check-cyclic-dependency,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5992},
                  iterate
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name iterate,
                   :type :defn,
                   :qname clojure.core/iterate,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3013},
                  slurp
                  {:ns clojure.core,
                   :name slurp,
                   :type :defn,
                   :qname clojure.core/slurp,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6942},
                  newline
                  {:fixed-arities #{0},
                   :ns clojure.core,
                   :name newline,
                   :type :defn,
                   :qname clojure.core/newline,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3697},
                  short-array
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name short-array,
                   :type :defn,
                   :qname clojure.core/short-array,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5309},
                  deref-future
                  {:fixed-arities #{1 3},
                   :ns clojure.core,
                   :name deref-future,
                   :type :defn,
                   :qname clojure.core/deref-future,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2298},
                  fn?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name fn?,
                   :type :defn,
                   :qname clojure.core/fn?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6237},
                  doall
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name doall,
                   :type :defn,
                   :qname clojure.core/doall,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3148},
                  prefers
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name prefers,
                   :type :defn,
                   :qname clojure.core/prefers,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1824},
                  enumeration-seq
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name enumeration-seq,
                   :type :defn,
                   :qname clojure.core/enumeration-seq,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5731},
                  dedupe
                  {:fixed-arities #{0 1},
                   :ns clojure.core,
                   :name dedupe,
                   :type :defn,
                   :qname clojure.core/dedupe,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7655},
                  pr-on
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name pr-on,
                   :type :defn,
                   :qname clojure.core/pr-on,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3668},
                  dissoc
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name dissoc,
                   :type :defn,
                   :qname clojure.core/dissoc,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1504},
                  atom
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name atom,
                   :type :defn,
                   :qname clojure.core/atom,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2327},
                  import
                  {:ns clojure.core,
                   :name import,
                   :type :defn,
                   :qname clojure.core/import,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3425},
                  bit-shift-right
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name bit-shift-right,
                   :type :defn,
                   :qname clojure.core/bit-shift-right,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1362},
                  peek
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name peek,
                   :type :defn,
                   :qname clojure.core/peek,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1460},
                  aget
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name aget,
                   :type :defn,
                   :qname clojure.core/aget,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3912},
                  pvalues
                  {:ns clojure.core,
                   :name pvalues,
                   :type :defn,
                   :qname clojure.core/pvalues,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7044},
                  bound-fn
                  {:ns clojure.core,
                   :name bound-fn,
                   :type :defn,
                   :qname clojure.core/bound-fn,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2006},
                  mk-bound-fn
                  {:fixed-arities #{3},
                   :ns clojure.core,
                   :name mk-bound-fn,
                   :type :defn,
                   :qname clojure.core/mk-bound-fn,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5103},
                  vswap!
                  {:ns clojure.core,
                   :name vswap!,
                   :type :defn,
                   :qname clojure.core/vswap!,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2539},
                  pr
                  {:fixed-arities #{0 1},
                   :ns clojure.core,
                   :name pr,
                   :type :defn,
                   :qname clojure.core/pr,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3677},
                  namespace
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name namespace,
                   :type :defn,
                   :qname clojure.core/namespace,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1597},
                  push-thread-bindings
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name push-thread-bindings,
                   :type :defn,
                   :qname clojure.core/push-thread-bindings,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1913},
                  bases
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name bases,
                   :type :defn,
                   :qname clojure.core/bases,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5543},
                  =
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name =,
                   :type :defn,
                   :qname clojure.core/=,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 783},
                  read+string
                  {:fixed-arities #{0 1 4 3 2},
                   :ns clojure.core,
                   :name read+string,
                   :type :defn,
                   :qname clojure.core/read+string,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3770},
                  dosync
                  {:ns clojure.core,
                   :name dosync,
                   :type :defn,
                   :qname clojure.core/dosync,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5076},
                  remove-ns
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name remove-ns,
                   :type :defn,
                   :qname clojure.core/remove-ns,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4140},
                  take
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name take,
                   :type :defn,
                   :qname clojure.core/take,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2861},
                  thread-bound?
                  {:ns clojure.core,
                   :name thread-bound?,
                   :type :defn,
                   :qname clojure.core/thread-bound?,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5520},
                  send-via
                  {:ns clojure.core,
                   :name send-via,
                   :type :defn,
                   :qname clojure.core/send-via,
                   :var-args-min-arity 3,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2101},
                  boolean
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name boolean,
                   :type :defn,
                   :qname clojure.core/boolean,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1605},
                  bit-shift-left
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name bit-shift-left,
                   :type :defn,
                   :qname clojure.core/bit-shift-left,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1356},
                  any?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name any?,
                   :type :defn,
                   :qname clojure.core/any?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 538},
                  find-var
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name find-var,
                   :type :defn,
                   :qname clojure.core/find-var,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2015},
                  rand-int
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name rand-int,
                   :type :defn,
                   :qname clojure.core/rand-int,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4919},
                  aclone
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name aclone,
                   :type :defn,
                   :qname clojure.core/aclone,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3905},
                  vreset!
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name vreset!,
                   :type :defn,
                   :qname clojure.core/vreset!,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2532},
                  chunk
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name chunk,
                   :type :defn,
                   :qname clojure.core/chunk,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 698},
                  dec
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name dec,
                   :type :defn,
                   :qname clojure.core/dec,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1142},
                  future-call
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name future-call,
                   :type :defn,
                   :qname clojure.core/future-call,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6963},
                  resultset-seq
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name resultset-seq,
                   :type :defn,
                   :qname clojure.core/resultset-seq,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5702},
                  struct
                  {:ns clojure.core,
                   :name struct,
                   :type :defn,
                   :qname clojure.core/struct,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4062},
                  data-reader-var
                  {:fixed-arities #{1},
                   :private? true,
                   :ns clojure.core,
                   :name data-reader-var,
                   :type :defn,
                   :qname clojure.core/data-reader-var,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7800},
                  map
                  {:fixed-arities #{1 4 3 2},
                   :ns clojure.core,
                   :name map,
                   :type :defn,
                   :qname clojure.core/map,
                   :var-args-min-arity 4,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2727},
                  juxt
                  {:fixed-arities #{1 3 2},
                   :ns clojure.core,
                   :name juxt,
                   :type :defn,
                   :qname clojure.core/juxt,
                   :var-args-min-arity 3,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2576},
                  setup-reference
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name setup-reference,
                   :type :defn,
                   :qname clojure.core/setup-reference,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2045},
                  ns-publics
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name ns-publics,
                   :type :defn,
                   :qname clojure.core/ns-publics,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4189},
                  <
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name <,
                   :type :defn,
                   :qname clojure.core/<,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 900},
                  with-loading-context
                  {:ns clojure.core,
                   :name with-loading-context,
                   :type :defn,
                   :qname clojure.core/with-loading-context,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5755},
                  test
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name test,
                   :type :defn,
                   :qname clojure.core/test,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4829},
                  ex-data
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name ex-data,
                   :type :defn,
                   :qname clojure.core/ex-data,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4792},
                  compile
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name compile,
                   :type :defn,
                   :qname clojure.core/compile,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6128},
                  isa?
                  {:fixed-arities #{3 2},
                   :ns clojure.core,
                   :name isa?,
                   :type :defn,
                   :qname clojure.core/isa?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5564},
                  boolean?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name boolean?,
                   :type :defn,
                   :qname clojure.core/boolean?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 519},
                  ..
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name ..,
                   :type :defn,
                   :qname clojure.core/..,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1659},
                  delay
                  {:ns clojure.core,
                   :name delay,
                   :type :defn,
                   :qname clojure.core/delay,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 746},
                  set-error-mode!
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name set-error-mode!,
                   :type :defn,
                   :qname clojure.core/set-error-mode!,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2212},
                  re-seq
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name re-seq,
                   :type :defn,
                   :qname clojure.core/re-seq,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4874},
                  make-hierarchy
                  {:fixed-arities #{0},
                   :ns clojure.core,
                   :name make-hierarchy,
                   :type :defn,
                   :qname clojure.core/make-hierarchy,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5528},
                  set-agent-send-executor!
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name set-agent-send-executor!,
                   :type :defn,
                   :qname clojure.core/set-agent-send-executor!,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2089},
                  swap-vals!
                  {:fixed-arities #{4 3 2},
                   :ns clojure.core,
                   :name swap-vals!,
                   :type :defn,
                   :qname clojure.core/swap-vals!,
                   :var-args-min-arity 4,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2357},
                  keep
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name keep,
                   :type :defn,
                   :qname clojure.core/keep,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7313},
                  char
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name char,
                   :type :defn,
                   :qname clojure.core/char,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3510},
                  mapcat
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name mapcat,
                   :type :defn,
                   :qname clojure.core/mapcat,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2783},
                  unchecked-long
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name unchecked-long,
                   :type :defn,
                   :qname clojure.core/unchecked-long,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3540},
                  some?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name some?,
                   :type :defn,
                   :qname clojure.core/some?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 531},
                  unchecked-negate
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name unchecked-negate,
                   :type :defn,
                   :qname clojure.core/unchecked-negate,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1184},
                  remove-tap
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name remove-tap,
                   :type :defn,
                   :qname clojure.core/remove-tap,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7879},
                  reverse
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name reverse,
                   :type :defn,
                   :qname clojure.core/reverse,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 947},
                  inst?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name inst?,
                   :type :defn,
                   :qname clojure.core/inst?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6793},
                  range
                  {:fixed-arities #{0 1 3 2},
                   :ns clojure.core,
                   :name range,
                   :type :defn,
                   :qname clojure.core/range,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3019},
                  sort
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name sort,
                   :type :defn,
                   :qname clojure.core/sort,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3102},
                  unchecked-inc-int
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name unchecked-inc-int,
                   :type :defn,
                   :qname clojure.core/unchecked-inc-int,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1149},
                  map-indexed
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name map-indexed,
                   :type :defn,
                   :qname clojure.core/map-indexed,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7283},
                  with-bindings
                  {:ns clojure.core,
                   :name with-bindings,
                   :type :defn,
                   :qname clojure.core/with-bindings,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1986},
                  rand-nth
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name rand-nth,
                   :type :defn,
                   :qname clojure.core/rand-nth,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7231},
                  comp
                  {:fixed-arities #{0 1 2},
                   :ns clojure.core,
                   :name comp,
                   :type :defn,
                   :qname clojure.core/comp,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2557},
                  await
                  {:ns clojure.core,
                   :name await,
                   :type :defn,
                   :qname clojure.core/await,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3274},
                  spit
                  {:ns clojure.core,
                   :name spit,
                   :type :defn,
                   :qname clojure.core/spit,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6954},
                  future-done?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name future-done?,
                   :type :defn,
                   :qname clojure.core/future-done?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6536},
                  dorun
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name dorun,
                   :type :defn,
                   :qname clojure.core/dorun,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3133},
                  simple-symbol?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name simple-symbol?,
                   :type :defn,
                   :qname clojure.core/simple-symbol?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1627},
                  assert-valid-fdecl
                  {:fixed-arities #{1},
                   :private? true,
                   :ns clojure.core,
                   :name assert-valid-fdecl,
                   :type :defn,
                   :qname clojure.core/assert-valid-fdecl,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7476},
                  disj
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name disj,
                   :type :defn,
                   :qname clojure.core/disj,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1518},
                  eval
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name eval,
                   :type :defn,
                   :qname clojure.core/eval,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3210},
                  refer
                  {:ns clojure.core,
                   :name refer,
                   :type :defn,
                   :qname clojure.core/refer,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4217},
                  pos?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name pos?,
                   :type :defn,
                   :qname clojure.core/pos?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1247},
                  fnil
                  {:fixed-arities #{4 3 2},
                   :ns clojure.core,
                   :name fnil,
                   :type :defn,
                   :qname clojure.core/fnil,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6556},
                  merge-with
                  {:ns clojure.core,
                   :name merge-with,
                   :type :defn,
                   :qname clojure.core/merge-with,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3051},
                  nthrest
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name nthrest,
                   :type :defn,
                   :qname clojure.core/nthrest,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3174},
                  load
                  {:ns clojure.core,
                   :name load,
                   :type :defn,
                   :qname clojure.core/load,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6109},
                  if-not
                  {:fixed-arities #{3 2},
                   :ns clojure.core,
                   :name if-not,
                   :type :defn,
                   :qname clojure.core/if-not,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 767},
                  sequential?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name sequential?,
                   :type :defn,
                   :qname clojure.core/sequential?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6250},
                  shuffle
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name shuffle,
                   :type :defn,
                   :qname clojure.core/shuffle,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7274},
                  boolean-array
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name boolean-array,
                   :type :defn,
                   :qname clojure.core/boolean-array,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5285},
                  find
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name find,
                   :type :defn,
                   :qname clojure.core/find,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1534},
                  alength
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name alength,
                   :type :defn,
                   :qname clojure.core/alength,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3898},
                  bit-xor
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name bit-xor,
                   :type :defn,
                   :qname clojure.core/bit-xor,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1311},
                  deliver
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name deliver,
                   :type :defn,
                   :qname clojure.core/deliver,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7127},
                  doseq
                  {:ns clojure.core,
                   :name doseq,
                   :type :defn,
                   :qname clojure.core/doseq,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3216},
                  unsigned-bit-shift-right
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name unsigned-bit-shift-right,
                   :type :defn,
                   :qname clojure.core/unsigned-bit-shift-right,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1368},
                  neg?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name neg?,
                   :type :defn,
                   :qname clojure.core/neg?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1254},
                  load-one
                  {:fixed-arities #{3},
                   :private? true,
                   :ns clojure.core,
                   :name load-one,
                   :type :defn,
                   :qname clojure.core/load-one,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5903},
                  load-data-readers
                  {:fixed-arities #{0},
                   :private? true,
                   :ns clojure.core,
                   :name load-data-readers,
                   :type :defn,
                   :qname clojure.core/load-data-readers,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7833},
                  var-set
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name var-set,
                   :type :defn,
                   :qname clojure.core/var-set,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4333},
                  unchecked-float
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name unchecked-float,
                   :type :defn,
                   :qname clojure.core/unchecked-float,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3546},
                  pmap
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name pmap,
                   :type :defn,
                   :qname clojure.core/pmap,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7012},
                  error-mode
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name error-mode,
                   :type :defn,
                   :qname clojure.core/error-mode,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2229},
                  num
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name num,
                   :type :defn,
                   :qname clojure.core/num,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3473},
                  reduced?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name reduced?,
                   :type :defn,
                   :qname clojure.core/reduced?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2842},
                  disj!
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name disj!,
                   :type :defn,
                   :qname clojure.core/disj!,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3400},
                  float?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name float?,
                   :type :defn,
                   :qname clojure.core/float?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3604},
                  normalize-slurp-opts
                  {:fixed-arities #{1},
                   :private? true,
                   :ns clojure.core,
                   :name normalize-slurp-opts,
                   :type :defn,
                   :qname clojure.core/normalize-slurp-opts,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6934},
                  ns-unalias
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name ns-unalias,
                   :type :defn,
                   :qname clojure.core/ns-unalias,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4281},
                  when-let
                  {:ns clojure.core,
                   :name when-let,
                   :type :defn,
                   :qname clojure.core/when-let,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1861},
                  int-array
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name int-array,
                   :type :defn,
                   :qname clojure.core/int-array,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5332},
                  set?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name set?,
                   :type :defn,
                   :qname clojure.core/set?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4099},
                  inc'
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name inc',
                   :type :defn,
                   :qname clojure.core/inc',
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 915},
                  process-annotation
                  {:fixed-arities #{2},
                   :private? true,
                   :ns clojure.core,
                   :name process-annotation,
                   :type :defn,
                   :qname clojure.core/process-annotation,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5483},
                  cat
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name cat,
                   :type :defn,
                   :qname clojure.core/cat,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7619},
                  flush
                  {:fixed-arities #{0},
                   :ns clojure.core,
                   :name flush,
                   :type :defn,
                   :qname clojure.core/flush,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3705},
                  take-while
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name take-while,
                   :type :defn,
                   :qname clojure.core/take-while,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2888},
                  vary-meta
                  {:ns clojure.core,
                   :name vary-meta,
                   :type :defn,
                   :qname clojure.core/vary-meta,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 675},
                  <=
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name <=,
                   :type :defn,
                   :qname clojure.core/<=,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1055},
                  alter
                  {:ns clojure.core,
                   :name alter,
                   :type :defn,
                   :qname clojure.core/alter,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2443},
                  -'
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name -',
                   :type :defn,
                   :qname clojure.core/-',
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1031},
                  if-some
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name if-some,
                   :type :defn,
                   :qname clojure.core/if-some,
                   :var-args-min-arity 3,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1876},
                  conj!
                  {:fixed-arities #{0 1 2},
                   :ns clojure.core,
                   :name conj!,
                   :type :defn,
                   :qname clojure.core/conj!,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3358},
                  repeatedly
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name repeatedly,
                   :type :defn,
                   :qname clojure.core/repeatedly,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5143},
                  zipmap
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name zipmap,
                   :type :defn,
                   :qname clojure.core/zipmap,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3071},
                  reset-vals!
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name reset-vals!,
                   :type :defn,
                   :qname clojure.core/reset-vals!,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2383},
                  alter-var-root
                  {:ns clojure.core,
                   :name alter-var-root,
                   :type :defn,
                   :qname clojure.core/alter-var-root,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5505},
                  biginteger
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name biginteger,
                   :type :defn,
                   :qname clojure.core/biginteger,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3633},
                  descriptor
                  {:fixed-arities #{1},
                   :private? true,
                   :ns clojure.core,
                   :name descriptor,
                   :type :defn,
                   :qname clojure.core/descriptor,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5460},
                  remove
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name remove,
                   :type :defn,
                   :qname clojure.core/remove,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2826},
                  *
                  {:fixed-arities #{0 1 2},
                   :ns clojure.core,
                   :name *,
                   :type :defn,
                   :qname clojure.core/*,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1008},
                  re-pattern
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name re-pattern,
                   :type :defn,
                   :qname clojure.core/re-pattern,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4839},
                  min
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name min,
                   :type :defn,
                   :qname clojure.core/min,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1125},
                  pop!
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name pop!,
                   :type :defn,
                   :qname clojure.core/pop!,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3392},
                  chunk-append
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name chunk-append,
                   :type :defn,
                   :qname clojure.core/chunk-append,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 695},
                  nary-inline
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name nary-inline,
                   :type :defn,
                   :qname clojure.core/nary-inline,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 955},
                  prn-str
                  {:ns clojure.core,
                   :name prn-str,
                   :type :defn,
                   :qname clojure.core/prn-str,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4745},
                  with-precision
                  {:ns clojure.core,
                   :name with-precision,
                   :type :defn,
                   :qname clojure.core/with-precision,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5086},
                  format
                  {:ns clojure.core,
                   :name format,
                   :type :defn,
                   :qname clojure.core/format,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5738},
                  reversible?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name reversible?,
                   :type :defn,
                   :qname clojure.core/reversible?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6268},
                  shutdown-agents
                  {:fixed-arities #{0},
                   :ns clojure.core,
                   :name shutdown-agents,
                   :type :defn,
                   :qname clojure.core/shutdown-agents,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2254},
                  bound?
                  {:ns clojure.core,
                   :name bound?,
                   :type :defn,
                   :qname clojure.core/bound?,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5512},
                  transduce
                  {:fixed-arities #{4 3},
                   :ns clojure.core,
                   :name transduce,
                   :type :defn,
                   :qname clojure.core/transduce,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6870},
                  lazy-seq
                  {:ns clojure.core,
                   :name lazy-seq,
                   :type :defn,
                   :qname clojure.core/lazy-seq,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 683},
                  compare-and-set!
                  {:fixed-arities #{3},
                   :ns clojure.core,
                   :name compare-and-set!,
                   :type :defn,
                   :qname clojure.core/compare-and-set!,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2368},
                  await1
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name await1,
                   :type :defn,
                   :qname clojure.core/await1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3291},
                  let
                  {:ns clojure.core,
                   :name let,
                   :type :defn,
                   :qname clojure.core/let,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4481},
                  ref-set
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name ref-set,
                   :type :defn,
                   :qname clojure.core/ref-set,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2455},
                  pop-thread-bindings
                  {:fixed-arities #{0},
                   :ns clojure.core,
                   :name pop-thread-bindings,
                   :type :defn,
                   :qname clojure.core/pop-thread-bindings,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1931},
                  interleave
                  {:fixed-arities #{0 1 2},
                   :ns clojure.core,
                   :name interleave,
                   :type :defn,
                   :qname clojure.core/interleave,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4309},
                  printf
                  {:ns clojure.core,
                   :name printf,
                   :type :defn,
                   :qname clojure.core/printf,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5746},
                  ->
                  {:ns clojure.core,
                   :name ->,
                   :type :defn,
                   :qname clojure.core/->,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1677},
                  defstruct
                  {:ns clojure.core,
                   :name defstruct,
                   :type :defn,
                   :qname clojure.core/defstruct,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4045},
                  get
                  {:fixed-arities #{3 2},
                   :ns clojure.core,
                   :name get,
                   :type :defn,
                   :qname clojure.core/get,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1494},
                  doto
                  {:ns clojure.core,
                   :name doto,
                   :type :defn,
                   :qname clojure.core/doto,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3852},
                  identity
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name identity,
                   :type :defn,
                   :qname clojure.core/identity,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1451},
                  into
                  {:fixed-arities #{0 1 3 2},
                   :ns clojure.core,
                   :name into,
                   :type :defn,
                   :qname clojure.core/into,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6887},
                  areduce
                  {:fixed-arities #{5},
                   :ns clojure.core,
                   :name areduce,
                   :type :defn,
                   :qname clojure.core/areduce,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5265},
                  long
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name long,
                   :type :defn,
                   :qname clojure.core/long,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3480},
                  double
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name double,
                   :type :defn,
                   :qname clojure.core/double,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3492},
                  volatile?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name volatile?,
                   :type :defn,
                   :qname clojure.core/volatile?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2548},
                  definline
                  {:ns clojure.core,
                   :name definline,
                   :type :defn,
                   :qname clojure.core/definline,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5229},
                  bit-and-not
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name bit-and-not,
                   :type :defn,
                   :qname clojure.core/bit-and-not,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1320},
                  var?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name var?,
                   :type :defn,
                   :qname clojure.core/var?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4975},
                  unchecked-add-int
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name unchecked-add-int,
                   :type :defn,
                   :qname clojure.core/unchecked-add-int,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1191},
                  hash-ordered-coll
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name hash-ordered-coll,
                   :type :defn,
                   :qname clojure.core/hash-ordered-coll,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5186},
                  future
                  {:ns clojure.core,
                   :name future,
                   :type :defn,
                   :qname clojure.core/future,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6990},
                  reset-meta!
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name reset-meta!,
                   :type :defn,
                   :qname clojure.core/reset-meta!,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2416},
                  cycle
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name cycle,
                   :type :defn,
                   :qname clojure.core/cycle,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2979},
                  fn
                  {:ns clojure.core,
                   :name fn,
                   :type :defn,
                   :qname clojure.core/fn,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4513},
                  seque
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name seque,
                   :type :defn,
                   :qname clojure.core/seque,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5397},
                  serialized-require
                  {:private? true,
                   :ns clojure.core,
                   :name serialized-require,
                   :type :defn,
                   :qname clojure.core/serialized-require,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6073},
                  empty?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name empty?,
                   :type :defn,
                   :qname clojure.core/empty?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6206},
                  short
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name short,
                   :type :defn,
                   :qname clojure.core/short,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3498},
                  add-tap
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name add-tap,
                   :type :defn,
                   :qname clojure.core/add-tap,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7868},
                  filterv
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name filterv,
                   :type :defn,
                   :qname clojure.core/filterv,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6921},
                  hash
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name hash,
                   :type :defn,
                   :qname clojure.core/hash,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5165},
                  quot
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name quot,
                   :type :defn,
                   :qname clojure.core/quot,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1261},
                  ns-aliases
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name ns-aliases,
                   :type :defn,
                   :qname clojure.core/ns-aliases,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4274},
                  read
                  {:fixed-arities #{0 1 4 3 2},
                   :ns clojure.core,
                   :name read,
                   :type :defn,
                   :qname clojure.core/read,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3741},
                  unchecked-double
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name unchecked-double,
                   :type :defn,
                   :qname clojure.core/unchecked-double,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3552},
                  key
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name key,
                   :type :defn,
                   :qname clojure.core/key,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1567},
                  not=
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name not=,
                   :type :defn,
                   :qname clojure.core/not=,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 819},
                  uri?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name uri?,
                   :type :defn,
                   :qname clojure.core/uri?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7845},
                  unchecked-multiply-int
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name unchecked-multiply-int,
                   :type :defn,
                   :qname clojure.core/unchecked-multiply-int,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1219},
                  shift-mask
                  {:fixed-arities #{3},
                   :private? true,
                   :ns clojure.core,
                   :name shift-mask,
                   :type :defn,
                   :qname clojure.core/shift-mask,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6583},
                  chunk-rest
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name chunk-rest,
                   :type :defn,
                   :qname clojure.core/chunk-rest,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 704},
                  pcalls
                  {:ns clojure.core,
                   :name pcalls,
                   :type :defn,
                   :qname clojure.core/pcalls,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7037},
                  remove-all-methods
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name remove-all-methods,
                   :type :defn,
                   :qname clojure.core/remove-all-methods,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1789},
                  ns-resolve
                  {:fixed-arities #{3 2},
                   :ns clojure.core,
                   :name ns-resolve,
                   :type :defn,
                   :qname clojure.core/ns-resolve,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4359},
                  as->
                  {:ns clojure.core,
                   :name as->,
                   :type :defn,
                   :qname clojure.core/as->,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7572},
                  trampoline
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name trampoline,
                   :type :defn,
                   :qname clojure.core/trampoline,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6299},
                  double?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name double?,
                   :type :defn,
                   :qname clojure.core/double?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1426},
                  fits-table?
                  {:fixed-arities #{1},
                   :private? true,
                   :ns clojure.core,
                   :name fits-table?,
                   :type :defn,
                   :qname clojure.core/fits-table?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6610},
                  when-not
                  {:ns clojure.core,
                   :name when-not,
                   :type :defn,
                   :qname clojure.core/when-not,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 499},
                  vec
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name vec,
                   :type :defn,
                   :qname clojure.core/vec,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 367},
                  when
                  {:ns clojure.core,
                   :name when,
                   :type :defn,
                   :qname clojure.core/when,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 493},
                  int
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name int,
                   :type :defn,
                   :qname clojure.core/int,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 882},
                  map-entry?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name map-entry?,
                   :type :defn,
                   :qname clojure.core/map-entry?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1478},
                  ns-refers
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name ns-refers,
                   :type :defn,
                   :qname clojure.core/ns-refers,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4254},
                  rand
                  {:fixed-arities #{0 1},
                   :ns clojure.core,
                   :name rand,
                   :type :defn,
                   :qname clojure.core/rand,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4911},
                  >
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name >,
                   :type :defn,
                   :qname clojure.core/>,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1070},
                  replace
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name replace,
                   :type :defn,
                   :qname clojure.core/replace,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5058},
                  int?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name int?,
                   :type :defn,
                   :qname clojure.core/int?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1400},
                  associative?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name associative?,
                   :type :defn,
                   :qname clojure.core/associative?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6244},
                  unchecked-int
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name unchecked-int,
                   :type :defn,
                   :qname clojure.core/unchecked-int,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3534},
                  set-error-handler!
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name set-error-handler!,
                   :type :defn,
                   :qname clojure.core/set-error-handler!,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2194},
                  keyword?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name keyword?,
                   :type :defn,
                   :qname clojure.core/keyword?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 568},
                  force
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name force,
                   :type :defn,
                   :qname clojure.core/force,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 761},
                  bound-fn*
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name bound-fn*,
                   :type :defn,
                   :qname clojure.core/bound-fn*,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1994},
                  group-by
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name group-by,
                   :type :defn,
                   :qname clojure.core/group-by,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7146},
                  prn
                  {:ns clojure.core,
                   :name prn,
                   :type :defn,
                   :qname clojure.core/prn,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3714},
                  >0?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name >0?,
                   :type :defn,
                   :qname clojure.core/>0?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 970},
                  unchecked-multiply
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name unchecked-multiply,
                   :type :defn,
                   :qname clojure.core/unchecked-multiply,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1226},
                  some->>
                  {:ns clojure.core,
                   :name some->>,
                   :type :defn,
                   :qname clojure.core/some->>,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7598},
                  even?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name even?,
                   :type :defn,
                   :qname clojure.core/even?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1386},
                  unchecked-dec
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name unchecked-dec,
                   :type :defn,
                   :qname clojure.core/unchecked-dec,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1170},
                  tagged-literal?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name tagged-literal?,
                   :type :defn,
                   :qname clojure.core/tagged-literal?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7719},
                  double-array
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name double-array,
                   :type :defn,
                   :qname clojure.core/double-array,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5317},
                  create-ns
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name create-ns,
                   :type :defn,
                   :qname clojure.core/create-ns,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4132},
                  re-matcher
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name re-matcher,
                   :type :defn,
                   :qname clojure.core/re-matcher,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4849},
                  ref
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name ref,
                   :type :defn,
                   :qname clojure.core/ref,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2262},
                  bigint
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name bigint,
                   :type :defn,
                   :qname clojure.core/bigint,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3619},
                  spread
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name spread,
                   :type :defn,
                   :qname clojure.core/spread,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 639},
                  promise
                  {:fixed-arities #{0},
                   :ns clojure.core,
                   :name promise,
                   :type :defn,
                   :qname clojure.core/promise,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7096},
                  rseq
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name rseq,
                   :type :defn,
                   :qname clojure.core/rseq,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1581},
                  ex-cause
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name ex-cause,
                   :type :defn,
                   :qname clojure.core/ex-cause,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4808},
                  load-all
                  {:fixed-arities #{3},
                   :private? true,
                   :ns clojure.core,
                   :name load-all,
                   :type :defn,
                   :qname clojure.core/load-all,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5916},
                  agent-errors
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name agent-errors,
                   :type :defn,
                   :qname clojure.core/agent-errors,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2236},
                  ex-message
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name ex-message,
                   :type :defn,
                   :qname clojure.core/ex-message,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4800},
                  float
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name float,
                   :type :defn,
                   :qname clojure.core/float,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3486},
                  pr-str
                  {:ns clojure.core,
                   :name pr-str,
                   :type :defn,
                   :qname clojure.core/pr-str,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4736},
                  concat
                  {:fixed-arities #{0 1 2},
                   :ns clojure.core,
                   :name concat,
                   :type :defn,
                   :qname clojure.core/concat,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 718},
                  set-agent-send-off-executor!
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name set-agent-send-off-executor!,
                   :type :defn,
                   :qname clojure.core/set-agent-send-off-executor!,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2095},
                  ns
                  {:ns clojure.core,
                   :name ns,
                   :type :defn,
                   :qname clojure.core/ns,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5764},
                  symbol
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name symbol,
                   :type :defn,
                   :qname clojure.core/symbol,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 589},
                  to-array-2d
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name to-array-2d,
                   :type :defn,
                   :qname clojure.core/to-array-2d,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4003},
                  mod
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name mod,
                   :type :defn,
                   :qname clojure.core/mod,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3566},
                  amap
                  {:fixed-arities #{4},
                   :ns clojure.core,
                   :name amap,
                   :type :defn,
                   :qname clojure.core/amap,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5249},
                  pop
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name pop,
                   :type :defn,
                   :qname clojure.core/pop,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1467},
                  use
                  {:ns clojure.core,
                   :name use,
                   :type :defn,
                   :qname clojure.core/use,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6093},
                  declare
                  {:ns clojure.core,
                   :name declare,
                   :type :defn,
                   :qname clojure.core/declare,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2776},
                  dissoc!
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name dissoc!,
                   :type :defn,
                   :qname clojure.core/dissoc!,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3381},
                  reductions
                  {:fixed-arities #{3 2},
                   :ns clojure.core,
                   :name reductions,
                   :type :defn,
                   :qname clojure.core/reductions,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7214},
                  indexed?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name indexed?,
                   :type :defn,
                   :qname clojure.core/indexed?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6274},
                  ref-history-count
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name ref-history-count,
                   :type :defn,
                   :qname clojure.core/ref-history-count,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2463},
                  -
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name -,
                   :type :defn,
                   :qname clojure.core/-,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1043},
                  assoc!
                  {:fixed-arities #{3},
                   :ns clojure.core,
                   :name assoc!,
                   :type :defn,
                   :qname clojure.core/assoc!,
                   :var-args-min-arity 3,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3368},
                  hash-set
                  {:fixed-arities #{0},
                   :ns clojure.core,
                   :name hash-set,
                   :type :defn,
                   :qname clojure.core/hash-set,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 389},
                  reduce-kv
                  {:fixed-arities #{3},
                   :ns clojure.core,
                   :name reduce-kv,
                   :type :defn,
                   :qname clojure.core/reduce-kv,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6847},
                  or
                  {:fixed-arities #{0 1},
                   :ns clojure.core,
                   :name or,
                   :type :defn,
                   :qname clojure.core/or,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 854},
                  cast
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name cast,
                   :type :defn,
                   :qname clojure.core/cast,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 346},
                  reset!
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name reset!,
                   :type :defn,
                   :qname clojure.core/reset!,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2376},
                  name
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name name,
                   :type :defn,
                   :qname clojure.core/name,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1589},
                  sorted-set
                  {:ns clojure.core,
                   :name sorted-set,
                   :type :defn,
                   :qname clojure.core/sorted-set,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 417},
                  counted?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name counted?,
                   :type :defn,
                   :qname clojure.core/counted?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6262},
                  byte-array
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name byte-array,
                   :type :defn,
                   :qname clojure.core/byte-array,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5293},
                  tagged-literal
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name tagged-literal,
                   :type :defn,
                   :qname clojure.core/tagged-literal,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7725},
                  println
                  {:ns clojure.core,
                   :name println,
                   :type :defn,
                   :qname clojure.core/println,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3733},
                  assert-args
                  {:ns clojure.core,
                   :name assert-args,
                   :type :defn,
                   :qname clojure.core/assert-args,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1832},
                  macroexpand-1
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name macroexpand-1,
                   :type :defn,
                   :qname clojure.core/macroexpand-1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4018},
                  assoc-in
                  {:fixed-arities #{3},
                   :ns clojure.core,
                   :name assoc-in,
                   :type :defn,
                   :qname clojure.core/assoc-in,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6161},
                  bit-test
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name bit-test,
                   :type :defn,
                   :qname clojure.core/bit-test,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1349},
                  defmethod
                  {:ns clojure.core,
                   :name defmethod,
                   :type :defn,
                   :qname clojure.core/defmethod,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1783},
                  requiring-resolve
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name requiring-resolve,
                   :type :defn,
                   :qname clojure.core/requiring-resolve,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6082},
                  time
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name time,
                   :type :defn,
                   :qname clojure.core/time,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3884},
                  memoize
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name memoize,
                   :type :defn,
                   :qname clojure.core/memoize,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6343},
                  alter-meta!
                  {:ns clojure.core,
                   :name alter-meta!,
                   :type :defn,
                   :qname clojure.core/alter-meta!,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2406},
                  future?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name future?,
                   :type :defn,
                   :qname clojure.core/future?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6530},
                  add-annotations
                  {:fixed-arities #{3 2},
                   :private? true,
                   :ns clojure.core,
                   :name add-annotations,
                   :type :defn,
                   :qname clojure.core/add-annotations,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5489},
                  zero?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name zero?,
                   :type :defn,
                   :qname clojure.core/zero?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 867},
                  simple-keyword?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name simple-keyword?,
                   :type :defn,
                   :qname clojure.core/simple-keyword?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1637},
                  require
                  {:ns clojure.core,
                   :name require,
                   :type :defn,
                   :qname clojure.core/require,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6007},
                  unchecked-dec-int
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name unchecked-dec-int,
                   :type :defn,
                   :qname clojure.core/unchecked-dec-int,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1163},
                  persistent!
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name persistent!,
                   :type :defn,
                   :qname clojure.core/persistent!,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3349},
                  add-watch
                  {:fixed-arities #{3},
                   :ns clojure.core,
                   :name add-watch,
                   :type :defn,
                   :qname clojure.core/add-watch,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2144},
                  class?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name class?,
                   :type :defn,
                   :qname clojure.core/class?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5443},
                  rem
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name rem,
                   :type :defn,
                   :qname clojure.core/rem,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1269},
                  agent-error
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name agent-error,
                   :type :defn,
                   :qname clojure.core/agent-error,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2169},
                  some
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name some,
                   :type :defn,
                   :qname clojure.core/some,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2692},
                  future-cancelled?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name future-cancelled?,
                   :type :defn,
                   :qname clojure.core/future-cancelled?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7006},
                  memfn
                  {:ns clojure.core,
                   :name memfn,
                   :type :defn,
                   :qname clojure.core/memfn,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3871},
                  neg-int?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name neg-int?,
                   :type :defn,
                   :qname clojure.core/neg-int?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1414},
                  struct-map
                  {:ns clojure.core,
                   :name struct-map,
                   :type :defn,
                   :qname clojure.core/struct-map,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4052},
                  drop
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name drop,
                   :type :defn,
                   :qname clojure.core/drop,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2909},
                  load-libs
                  {:private? true,
                   :ns clojure.core,
                   :name load-libs,
                   :type :defn,
                   :qname clojure.core/load-libs,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5969},
                  nth
                  {:fixed-arities #{3 2},
                   :ns clojure.core,
                   :name nth,
                   :type :defn,
                   :qname clojure.core/nth,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 889},
                  sorted?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name sorted?,
                   :type :defn,
                   :qname clojure.core/sorted?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6256},
                  nil?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name nil?,
                   :type :defn,
                   :qname clojure.core/nil?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 436},
                  split-at
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name split-at,
                   :type :defn,
                   :qname clojure.core/split-at,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2985},
                  load-reader
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name load-reader,
                   :type :defn,
                   :qname clojure.core/load-reader,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4082},
                  random-sample
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name random-sample,
                   :type :defn,
                   :qname clojure.core/random-sample,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7673},
                  cond->
                  {:ns clojure.core,
                   :name cond->,
                   :type :defn,
                   :qname clojure.core/cond->,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7538},
                  dotimes
                  {:ns clojure.core,
                   :name dotimes,
                   :type :defn,
                   :qname clojure.core/dotimes,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3313},
                  select-keys
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name select-keys,
                   :type :defn,
                   :qname clojure.core/select-keys,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1540},
                  bit-and
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name bit-and,
                   :type :defn,
                   :qname clojure.core/bit-and,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1293},
                  bounded-count
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name bounded-count,
                   :type :defn,
                   :qname clojure.core/bounded-count,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7384},
                  update
                  {:fixed-arities #{4 6 3 5},
                   :ns clojure.core,
                   :name update,
                   :type :defn,
                   :qname clojure.core/update,
                   :var-args-min-arity 6,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6188},
                  list*
                  {:fixed-arities #{1 4 3 2},
                   :ns clojure.core,
                   :name list*,
                   :type :defn,
                   :qname clojure.core/list*,
                   :var-args-min-arity 4,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 648},
                  update-in
                  {:ns clojure.core,
                   :name update-in,
                   :type :defn,
                   :qname clojure.core/update-in,
                   :var-args-min-arity 3,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6172},
                  prefer-method
                  {:fixed-arities #{3},
                   :ns clojure.core,
                   :name prefer-method,
                   :type :defn,
                   :qname clojure.core/prefer-method,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1803},
                  ensure-reduced
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name ensure-reduced,
                   :type :defn,
                   :qname clojure.core/ensure-reduced,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2849},
                  *'
                  {:fixed-arities #{0 1 2},
                   :ns clojure.core,
                   :name *',
                   :type :defn,
                   :qname clojure.core/*',
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 996},
                  with-open
                  {:ns clojure.core,
                   :name with-open,
                   :type :defn,
                   :qname clojure.core/with-open,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3831},
                  mix-collection-hash
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name mix-collection-hash,
                   :type :defn,
                   :qname clojure.core/mix-collection-hash,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5175},
                  re-find
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name re-find,
                   :type :defn,
                   :qname clojure.core/re-find,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4898},
                  run!
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name run!,
                   :type :defn,
                   :qname clojure.core/run!,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7710},
                  val
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name val,
                   :type :defn,
                   :qname clojure.core/val,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1574},
                  defonce
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name defonce,
                   :type :defn,
                   :qname clojure.core/defonce,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5828},
                  unchecked-add
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name unchecked-add,
                   :type :defn,
                   :qname clojure.core/unchecked-add,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1198},
                  loaded-libs
                  {:fixed-arities #{0},
                   :ns clojure.core,
                   :name loaded-libs,
                   :type :defn,
                   :qname clojure.core/loaded-libs,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6104},
                  bytes?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name bytes?,
                   :type :defn,
                   :qname clojure.core/bytes?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5388},
                  not
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name not,
                   :type :defn,
                   :qname clojure.core/not,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 524},
                  unreduced
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name unreduced,
                   :type :defn,
                   :qname clojure.core/unreduced,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2855},
                  the-ns
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name the-ns,
                   :type :defn,
                   :qname clojure.core/the-ns,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4153},
                  type
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name type,
                   :type :defn,
                   :qname clojure.core/type,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3466},
                  identical?
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name identical?,
                   :type :defn,
                   :qname clojure.core/identical?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 775},
                  unchecked-divide-int
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name unchecked-divide-int,
                   :type :defn,
                   :qname clojure.core/unchecked-divide-int,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1233},
                  ns-name
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name ns-name,
                   :type :defn,
                   :qname clojure.core/ns-name,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4164},
                  is-annotation?
                  {:fixed-arities #{1},
                   :private? true,
                   :ns clojure.core,
                   :name is-annotation?,
                   :type :defn,
                   :qname clojure.core/is-annotation?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5449},
                  max-key
                  {:fixed-arities #{3 2},
                   :ns clojure.core,
                   :name max-key,
                   :type :defn,
                   :qname clojure.core/max-key,
                   :var-args-min-arity 3,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4989},
                  defn-
                  {:ns clojure.core,
                   :name defn-,
                   :type :defn,
                   :qname clojure.core/defn-,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4925},
                  file-seq
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name file-seq,
                   :type :defn,
                   :qname clojure.core/file-seq,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4948},
                  agent
                  {:ns clojure.core,
                   :name agent,
                   :type :defn,
                   :qname clojure.core/agent,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2054},
                  ns-map
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name ns-map,
                   :type :defn,
                   :qname clojure.core/ns-map,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4171},
                  set-validator!
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name set-validator!,
                   :type :defn,
                   :qname clojure.core/set-validator!,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2389},
                  ident?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name ident?,
                   :type :defn,
                   :qname clojure.core/ident?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1612},
                  maybe-destructured
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name maybe-destructured,
                   :type :defn,
                   :qname clojure.core/maybe-destructured,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4494},
                  maybe-min-hash
                  {:fixed-arities #{1},
                   :private? true,
                   :ns clojure.core,
                   :name maybe-min-hash,
                   :type :defn,
                   :qname clojure.core/maybe-min-hash,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6589},
                  swap!
                  {:fixed-arities #{4 3 2},
                   :ns clojure.core,
                   :name swap!,
                   :type :defn,
                   :qname clojure.core/swap!,
                   :var-args-min-arity 4,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2345},
                  vals
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name vals,
                   :type :defn,
                   :qname clojure.core/vals,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1561},
                  unchecked-subtract
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name unchecked-subtract,
                   :type :defn,
                   :qname clojure.core/unchecked-subtract,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1212},
                  tap>
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name tap>,
                   :type :defn,
                   :qname clojure.core/tap>,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7886},
                  sorted-set-by
                  {:ns clojure.core,
                   :name sorted-set-by,
                   :type :defn,
                   :qname clojure.core/sorted-set-by,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 425},
                  sync
                  {:ns clojure.core,
                   :name sync,
                   :type :defn,
                   :qname clojure.core/sync,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2498},
                  qualified-ident?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name qualified-ident?,
                   :type :defn,
                   :qname clojure.core/qualified-ident?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1622},
                  assert
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name assert,
                   :type :defn,
                   :qname clojure.core/assert,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4816},
                  true?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name true?,
                   :type :defn,
                   :qname clojure.core/true?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 512},
                  array
                  {:ns clojure.core,
                   :name array,
                   :type :defn,
                   :qname clojure.core/array,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3456},
                  release-pending-sends
                  {:fixed-arities #{0},
                   :ns clojure.core,
                   :name release-pending-sends,
                   :type :defn,
                   :qname clojure.core/release-pending-sends,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2133},
                  print
                  {:ns clojure.core,
                   :name print,
                   :type :defn,
                   :qname clojure.core/print,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3724},
                  empty
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name empty,
                   :type :defn,
                   :qname clojure.core/empty,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5241},
                  remove-method
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name remove-method,
                   :type :defn,
                   :qname clojure.core/remove-method,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1796},
                  load-lib
                  {:private? true,
                   :ns clojure.core,
                   :name load-lib,
                   :type :defn,
                   :qname clojure.core/load-lib,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5928},
                  letfn
                  {:ns clojure.core,
                   :name letfn,
                   :type :defn,
                   :qname clojure.core/letfn,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6543},
                  volatile!
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name volatile!,
                   :type :defn,
                   :qname clojure.core/volatile!,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2525},
                  /
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name /,
                   :type :defn,
                   :qname clojure.core//,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1020},
                  read-line
                  {:fixed-arities #{0},
                   :ns clojure.core,
                   :name read-line,
                   :type :defn,
                   :qname clojure.core/read-line,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3796},
                  binding-conveyor-fn
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name binding-conveyor-fn,
                   :type :defn,
                   :qname clojure.core/binding-conveyor-fn,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2022},
                  reader-conditional?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name reader-conditional?,
                   :type :defn,
                   :qname clojure.core/reader-conditional?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7732},
                  bit-or
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name bit-or,
                   :type :defn,
                   :qname clojure.core/bit-or,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1302},
                  clear-agent-errors
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name clear-agent-errors,
                   :type :defn,
                   :qname clojure.core/clear-agent-errors,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2246},
                  vector
                  {:fixed-arities #{0 1 4 6 3 2 5},
                   :ns clojure.core,
                   :name vector,
                   :type :defn,
                   :qname clojure.core/vector,
                   :var-args-min-arity 6,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 353},
                  >=
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name >=,
                   :type :defn,
                   :qname clojure.core/>=,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1085},
                  drop-last
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name drop-last,
                   :type :defn,
                   :qname clojure.core/drop-last,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2934},
                  not-empty
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name not-empty,
                   :type :defn,
                   :qname clojure.core/not-empty,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5537},
                  root-directory
                  {:fixed-arities #{1},
                   :private? true,
                   :ns clojure.core,
                   :name root-directory,
                   :type :defn,
                   :qname clojure.core/root-directory,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5895},
                  distinct
                  {:fixed-arities #{0 1},
                   :ns clojure.core,
                   :name distinct,
                   :type :defn,
                   :qname clojure.core/distinct,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5029},
                  partition
                  {:fixed-arities #{4 3 2},
                   :ns clojure.core,
                   :name partition,
                   :type :defn,
                   :qname clojure.core/partition,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3184},
                  data-reader-urls
                  {:fixed-arities #{0},
                   :private? true,
                   :ns clojure.core,
                   :name data-reader-urls,
                   :type :defn,
                   :qname clojure.core/data-reader-urls,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7794},
                  loop
                  {:ns clojure.core,
                   :name loop,
                   :type :defn,
                   :qname clojure.core/loop,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4575},
                  add-classpath
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name add-classpath,
                   :type :defn,
                   :qname clojure.core/add-classpath,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5152},
                  bit-flip
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name bit-flip,
                   :type :defn,
                   :qname clojure.core/bit-flip,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1343},
                  long-array
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name long-array,
                   :type :defn,
                   :qname clojure.core/long-array,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5340},
                  filter-key
                  {:fixed-arities #{3},
                   :ns clojure.core,
                   :name filter-key,
                   :type :defn,
                   :qname clojure.core/filter-key,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4116},
                  descendants
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name descendants,
                   :type :defn,
                   :qname clojure.core/descendants,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5614},
                  merge
                  {:ns clojure.core,
                   :name merge,
                   :type :defn,
                   :qname clojure.core/merge,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3041},
                  accessor
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name accessor,
                   :type :defn,
                   :qname clojure.core/accessor,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4071},
                  integer?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name integer?,
                   :type :defn,
                   :qname clojure.core/integer?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1374},
                  mapv
                  {:fixed-arities #{4 3 2},
                   :ns clojure.core,
                   :name mapv,
                   :type :defn,
                   :qname clojure.core/mapv,
                   :var-args-min-arity 4,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6903},
                  partition-all
                  {:fixed-arities #{1 3 2},
                   :ns clojure.core,
                   :name partition-all,
                   :type :defn,
                   :qname clojure.core/partition-all,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7240},
                  partition-by
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name partition-by,
                   :type :defn,
                   :qname clojure.core/partition-by,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7160},
                  numerator
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name numerator,
                   :type :defn,
                   :qname clojure.core/numerator,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3582},
                  object-array
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name object-array,
                   :type :defn,
                   :qname clojure.core/object-array,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5325},
                  with-out-str
                  {:ns clojure.core,
                   :name with-out-str,
                   :type :defn,
                   :qname clojure.core/with-out-str,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4716},
                  condp
                  {:ns clojure.core,
                   :name condp,
                   :type :defn,
                   :qname clojure.core/condp,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6359},
                  derive
                  {:fixed-arities #{3 2},
                   :ns clojure.core,
                   :name derive,
                   :type :defn,
                   :qname clojure.core/derive,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5626},
                  load-string
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name load-string,
                   :type :defn,
                   :qname clojure.core/load-string,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4089},
                  special-symbol?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name special-symbol?,
                   :type :defn,
                   :qname clojure.core/special-symbol?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4968},
                  elide-top-frames
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name elide-top-frames,
                   :type :defn,
                   :qname clojure.core/elide-top-frames,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4774},
                  prep-hashes
                  {:fixed-arities #{4},
                   :private? true,
                   :ns clojure.core,
                   :name prep-hashes,
                   :type :defn,
                   :qname clojure.core/prep-hashes,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6668},
                  ancestors
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name ancestors,
                   :type :defn,
                   :qname clojure.core/ancestors,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5598},
                  subseq
                  {:fixed-arities #{3 5},
                   :ns clojure.core,
                   :name subseq,
                   :type :defn,
                   :qname clojure.core/subseq,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5109},
                  error-handler
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name error-handler,
                   :type :defn,
                   :qname clojure.core/error-handler,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2204},
                  gensym
                  {:fixed-arities #{0 1},
                   :ns clojure.core,
                   :name gensym,
                   :type :defn,
                   :qname clojure.core/gensym,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 604},
                  cond
                  {:ns clojure.core,
                   :name cond,
                   :type :defn,
                   :qname clojure.core/cond,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 574},
                  check-valid-options
                  {:ns clojure.core,
                   :name check-valid-options,
                   :type :defn,
                   :qname clojure.core/check-valid-options,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1711},
                  ratio?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name ratio?,
                   :type :defn,
                   :qname clojure.core/ratio?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3576},
                  delay?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name delay?,
                   :type :defn,
                   :qname clojure.core/delay?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 755},
                  intern
                  {:fixed-arities #{3 2},
                   :ns clojure.core,
                   :name intern,
                   :type :defn,
                   :qname clojure.core/intern,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6317},
                  flatten
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name flatten,
                   :type :defn,
                   :qname clojure.core/flatten,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7136},
                  halt-when
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name halt-when,
                   :type :defn,
                   :qname clojure.core/halt-when,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7631},
                  with-in-str
                  {:ns clojure.core,
                   :name with-in-str,
                   :type :defn,
                   :qname clojure.core/with-in-str,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4727},
                  remove-watch
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name remove-watch,
                   :type :defn,
                   :qname clojure.core/remove-watch,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2162},
                  ex-info
                  {:fixed-arities #{3 2},
                   :ns clojure.core,
                   :name ex-info,
                   :type :defn,
                   :qname clojure.core/ex-info,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4783},
                  ifn?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name ifn?,
                   :type :defn,
                   :qname clojure.core/ifn?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6230},
                  some->
                  {:ns clojure.core,
                   :name some->,
                   :type :defn,
                   :qname clojure.core/some->,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7584},
                  nat-int?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name nat-int?,
                   :type :defn,
                   :qname clojure.core/nat-int?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1420},
                  ns-interns
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name ns-interns,
                   :type :defn,
                   :qname clojure.core/ns-interns,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4207},
                  all-ns
                  {:fixed-arities #{0},
                   :ns clojure.core,
                   :name all-ns,
                   :type :defn,
                   :qname clojure.core/all-ns,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4147},
                  subvec
                  {:fixed-arities #{3 2},
                   :ns clojure.core,
                   :name subvec,
                   :type :defn,
                   :qname clojure.core/subvec,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3818},
                  for
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name for,
                   :type :defn,
                   :qname clojure.core/for,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4624},
                  binding
                  {:ns clojure.core,
                   :name binding,
                   :type :defn,
                   :qname clojure.core/binding,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1947},
                  partial
                  {:fixed-arities #{1 4 3 2},
                   :ns clojure.core,
                   :name partial,
                   :type :defn,
                   :qname clojure.core/partial,
                   :var-args-min-arity 4,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2614},
                  chunked-seq?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name chunked-seq?,
                   :type :defn,
                   :qname clojure.core/chunked-seq?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 715},
                  find-keyword
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name find-keyword,
                   :type :defn,
                   :qname clojure.core/find-keyword,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 625},
                  replicate
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name replicate,
                   :type :defn,
                   :qname clojure.core/replicate,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3006},
                  min-key
                  {:fixed-arities #{3 2},
                   :ns clojure.core,
                   :name min-key,
                   :type :defn,
                   :qname clojure.core/min-key,
                   :var-args-min-arity 3,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5009},
                  reduced
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name reduced,
                   :type :defn,
                   :qname clojure.core/reduced,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2836},
                  re-matches
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name re-matches,
                   :type :defn,
                   :qname clojure.core/re-matches,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4886},
                  array-map
                  {:fixed-arities #{0},
                   :ns clojure.core,
                   :name array-map,
                   :type :defn,
                   :qname clojure.core/array-map,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4379},
                  unchecked-byte
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name unchecked-byte,
                   :type :defn,
                   :qname clojure.core/unchecked-byte,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3516},
                  reduce1
                  {:fixed-arities #{3 2},
                   :ns clojure.core,
                   :name reduce1,
                   :type :defn,
                   :qname clojure.core/reduce1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 930},
                  with-local-vars
                  {:ns clojure.core,
                   :name with-local-vars,
                   :type :defn,
                   :qname clojure.core/with-local-vars,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4340},
                  ns-imports
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name ns-imports,
                   :type :defn,
                   :qname clojure.core/ns-imports,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4200},
                  send-off
                  {:ns clojure.core,
                   :name send-off,
                   :type :defn,
                   :qname clojure.core/send-off,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2122},
                  every-pred
                  {:fixed-arities #{1 3 2},
                   :ns clojure.core,
                   :name every-pred,
                   :type :defn,
                   :qname clojure.core/every-pred,
                   :var-args-min-arity 3,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7396},
                  keys
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name keys,
                   :type :defn,
                   :qname clojure.core/keys,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1555},
                  rationalize
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name rationalize,
                   :type :defn,
                   :qname clojure.core/rationalize,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1277},
                  distinct?
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name distinct?,
                   :type :defn,
                   :qname clojure.core/distinct?,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5685},
                  libspec?
                  {:fixed-arities #{1},
                   :private? true,
                   :ns clojure.core,
                   :name libspec?,
                   :type :defn,
                   :qname clojure.core/libspec?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5870},
                  pos-int?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name pos-int?,
                   :type :defn,
                   :qname clojure.core/pos-int?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1408},
                  prep-ints
                  {:fixed-arities #{2},
                   :private? true,
                   :ns clojure.core,
                   :name prep-ints,
                   :type :defn,
                   :qname clojure.core/prep-ints,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6616},
                  unchecked-short
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name unchecked-short,
                   :type :defn,
                   :qname clojure.core/unchecked-short,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3522},
                  methods
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name methods,
                   :type :defn,
                   :qname clojure.core/methods,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1811},
                  odd?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name odd?,
                   :type :defn,
                   :qname clojure.core/odd?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1394},
                  float-array
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name float-array,
                   :type :defn,
                   :qname clojure.core/float-array,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5277},
                  alias
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name alias,
                   :type :defn,
                   :qname clojure.core/alias,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4264},
                  frequencies
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name frequencies,
                   :type :defn,
                   :qname clojure.core/frequencies,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7203},
                  read-string
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name read-string,
                   :type :defn,
                   :qname clojure.core/read-string,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3805},
                  rsubseq
                  {:fixed-arities #{3 5},
                   :ns clojure.core,
                   :name rsubseq,
                   :type :defn,
                   :qname clojure.core/rsubseq,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5126},
                  inc
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name inc,
                   :type :defn,
                   :qname clojure.core/inc,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 922},
                  get-method
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name get-method,
                   :type :defn,
                   :qname clojure.core/get-method,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1817},
                  with-redefs
                  {:ns clojure.core,
                   :name with-redefs,
                   :type :defn,
                   :qname clojure.core/with-redefs,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7518},
                  uuid?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name uuid?,
                   :type :defn,
                   :qname clojure.core/uuid?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6805},
                  bit-clear
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name bit-clear,
                   :type :defn,
                   :qname clojure.core/bit-clear,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1331},
                  filter
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name filter,
                   :type :defn,
                   :qname clojure.core/filter,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2793},
                  locking
                  {:ns clojure.core,
                   :name locking,
                   :type :defn,
                   :qname clojure.core/locking,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1647},
                  +
                  {:fixed-arities #{0 1 2},
                   :ns clojure.core,
                   :name +,
                   :type :defn,
                   :qname clojure.core/+,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 984},
                  def-aset
                  {:fixed-arities #{3},
                   :ns clojure.core,
                   :name def-aset,
                   :type :defn,
                   :qname clojure.core/def-aset,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3935},
                  split-with
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name split-with,
                   :type :defn,
                   :qname clojure.core/split-with,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2992},
                  aset
                  {:fixed-arities #{3},
                   :ns clojure.core,
                   :name aset,
                   :type :defn,
                   :qname clojure.core/aset,
                   :var-args-min-arity 3,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3923},
                  keyword
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name keyword,
                   :type :defn,
                   :qname clojure.core/keyword,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 614},
                  destructure
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name destructure,
                   :type :defn,
                   :qname clojure.core/destructure,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4389},
                  defmulti
                  {:ns clojure.core,
                   :name defmulti,
                   :type :defn,
                   :qname clojure.core/defmulti,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1725},
                  str
                  {:fixed-arities #{0 1},
                   :ns clojure.core,
                   :name str,
                   :type :defn,
                   :qname clojure.core/str,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 544},
                  hash-map
                  {:fixed-arities #{0},
                   :ns clojure.core,
                   :name hash-map,
                   :type :defn,
                   :qname clojure.core/hash-map,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 379},
                  if-let
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name if-let,
                   :type :defn,
                   :qname clojure.core/if-let,
                   :var-args-min-arity 3,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1841},
                  underive
                  {:fixed-arities #{3 2},
                   :ns clojure.core,
                   :name underive,
                   :type :defn,
                   :qname clojure.core/underive,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5664},
                  ref-max-history
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name ref-max-history,
                   :type :defn,
                   :qname clojure.core/ref-max-history,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2479},
                  false?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name false?,
                   :type :defn,
                   :qname clojure.core/false?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 505},
                  class
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name class,
                   :type :defn,
                   :qname clojure.core/class,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3460},
                  some-fn
                  {:fixed-arities #{1 3 2},
                   :ns clojure.core,
                   :name some-fn,
                   :type :defn,
                   :qname clojure.core/some-fn,
                   :var-args-min-arity 3,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7436},
                  case
                  {:ns clojure.core,
                   :name case,
                   :type :defn,
                   :qname clojure.core/case,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6697},
                  to-array
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name to-array,
                   :type :defn,
                   :qname clojure.core/to-array,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 338},
                  bigdec
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name bigdec,
                   :type :defn,
                   :qname clojure.core/bigdec,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3647},
                  list?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name list?,
                   :type :defn,
                   :qname clojure.core/list?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6219},
                  simple-ident?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name simple-ident?,
                   :type :defn,
                   :qname clojure.core/simple-ident?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1617},
                  bit-not
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name bit-not,
                   :type :defn,
                   :qname clojure.core/bit-not,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1286},
                  io!
                  {:ns clojure.core,
                   :name io!,
                   :type :defn,
                   :qname clojure.core/io!,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2512},
                  xml-seq
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name xml-seq,
                   :type :defn,
                   :qname clojure.core/xml-seq,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4958},
                  case-map
                  {:fixed-arities #{4},
                   :private? true,
                   :ns clojure.core,
                   :name case-map,
                   :type :defn,
                   :qname clojure.core/case-map,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6599},
                  byte
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name byte,
                   :type :defn,
                   :qname clojure.core/byte,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3504},
                  max
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name max,
                   :type :defn,
                   :qname clojure.core/max,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1115},
                  ==
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name ==,
                   :type :defn,
                   :qname clojure.core/==,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1100},
                  lazy-cat
                  {:ns clojure.core,
                   :name lazy-cat,
                   :type :defn,
                   :qname clojure.core/lazy-cat,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4614},
                  comment
                  {:ns clojure.core,
                   :name comment,
                   :type :defn,
                   :qname clojure.core/comment,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4711},
                  parents
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name parents,
                   :type :defn,
                   :qname clojure.core/parents,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5585},
                  count
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name count,
                   :type :defn,
                   :qname clojure.core/count,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 874},
                  root-resource
                  {:fixed-arities #{1},
                   :private? true,
                   :ns clojure.core,
                   :name root-resource,
                   :type :defn,
                   :qname clojure.core/root-resource,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5886},
                  supers
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name supers,
                   :type :defn,
                   :qname clojure.core/supers,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5553},
                  sorted-map-by
                  {:ns clojure.core,
                   :name sorted-map-by,
                   :type :defn,
                   :qname clojure.core/sorted-map-by,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 407},
                  apply
                  {:fixed-arities #{4 3 2 5},
                   :ns clojure.core,
                   :name apply,
                   :type :defn,
                   :qname clojure.core/apply,
                   :var-args-min-arity 5,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 660},
                  add-doc-and-meta
                  {:fixed-arities #{3},
                   :ns clojure.core,
                   :name add-doc-and-meta,
                   :type :defn,
                   :qname clojure.core/add-doc-and-meta,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6406},
                  interpose
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name interpose,
                   :type :defn,
                   :qname clojure.core/interpose,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5206},
                  deref
                  {:fixed-arities #{1 3},
                   :ns clojure.core,
                   :name deref,
                   :type :defn,
                   :qname clojure.core/deref,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2306},
                  rational?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name rational?,
                   :type :defn,
                   :qname clojure.core/rational?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3612},
                  transient
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name transient,
                   :type :defn,
                   :qname clojure.core/transient,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3342},
                  clojure-version
                  {:fixed-arities #{0},
                   :ns clojure.core,
                   :name clojure-version,
                   :type :defn,
                   :qname clojure.core/clojure-version,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7081},
                  merge-hash-collisions
                  {:fixed-arities #{4},
                   :private? true,
                   :ns clojure.core,
                   :name merge-hash-collisions,
                   :type :defn,
                   :qname clojure.core/merge-hash-collisions,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6632},
                  chunk-cons
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name chunk-cons,
                   :type :defn,
                   :qname clojure.core/chunk-cons,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 710},
                  comparator
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name comparator,
                   :type :defn,
                   :qname clojure.core/comparator,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3094},
                  sorted-map
                  {:ns clojure.core,
                   :name sorted-map,
                   :type :defn,
                   :qname clojure.core/sorted-map,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 398},
                  send
                  {:ns clojure.core,
                   :name send,
                   :type :defn,
                   :qname clojure.core/send,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2111},
                  drop-while
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name drop-while,
                   :type :defn,
                   :qname clojure.core/drop-while,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2952},
                  realized?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name realized?,
                   :type :defn,
                   :qname clojure.core/realized?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7533},
                  char-array
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name char-array,
                   :type :defn,
                   :qname clojure.core/char-array,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5301},
                  resolve
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name resolve,
                   :type :defn,
                   :qname clojure.core/resolve,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4372},
                  compare
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name compare,
                   :type :defn,
                   :qname clojure.core/compare,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 831},
                  complement
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name complement,
                   :type :defn,
                   :qname clojure.core/complement,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1433},
                  with-redefs-fn
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name with-redefs-fn,
                   :type :defn,
                   :qname clojure.core/with-redefs-fn,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7498},
                  sequence
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name sequence,
                   :type :defn,
                   :qname clojure.core/sequence,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2647},
                  constantly
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name constantly,
                   :type :defn,
                   :qname clojure.core/constantly,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1445},
                  when-class
                  {:ns clojure.core,
                   :name when-class,
                   :type :defn,
                   :qname clojure.core/when-class,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6771},
                  make-array
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name make-array,
                   :type :defn,
                   :qname clojure.core/make-array,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3986},
                  completing
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name completing,
                   :type :defn,
                   :qname clojure.core/completing,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6858},
                  unchecked-negate-int
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name unchecked-negate-int,
                   :type :defn,
                   :qname clojure.core/unchecked-negate-int,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1177},
                  hash-unordered-coll
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name hash-unordered-coll,
                   :type :defn,
                   :qname clojure.core/hash-unordered-coll,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5195},
                  repeat
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name repeat,
                   :type :defn,
                   :qname clojure.core/repeat,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2999},
                  unchecked-inc
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name unchecked-inc,
                   :type :defn,
                   :qname clojure.core/unchecked-inc,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1156},
                  nthnext
                  {:fixed-arities #{2},
                   :ns clojure.core,
                   :name nthnext,
                   :type :defn,
                   :qname clojure.core/nthnext,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3164},
                  and
                  {:fixed-arities #{0 1},
                   :ns clojure.core,
                   :name and,
                   :type :defn,
                   :qname clojure.core/and,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 842},
                  create-struct
                  {:ns clojure.core,
                   :name create-struct,
                   :type :defn,
                   :qname clojure.core/create-struct,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4038},
                  preserving-reduced
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name preserving-reduced,
                   :type :defn,
                   :qname clojure.core/preserving-reduced,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7612},
                  get-validator
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name get-validator,
                   :type :defn,
                   :qname clojure.core/get-validator,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2400},
                  number?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name number?,
                   :type :defn,
                   :qname clojure.core/number?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3559},
                  await-for
                  {:ns clojure.core,
                   :name await-for,
                   :type :defn,
                   :qname clojure.core/await-for,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3296},
                  chunk-next
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name chunk-next,
                   :type :defn,
                   :qname clojure.core/chunk-next,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 707},
                  print-str
                  {:ns clojure.core,
                   :name print-str,
                   :type :defn,
                   :qname clojure.core/print-str,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4754},
                  into-array
                  {:fixed-arities #{1 2},
                   :ns clojure.core,
                   :name into-array,
                   :type :defn,
                   :qname clojure.core/into-array,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3443},
                  qualified-symbol?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name qualified-symbol?,
                   :type :defn,
                   :qname clojure.core/qualified-symbol?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1632},
                  chunk-buffer
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name chunk-buffer,
                   :type :defn,
                   :qname clojure.core/chunk-buffer,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 692},
                  seqable?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name seqable?,
                   :type :defn,
                   :qname clojure.core/seqable?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6225},
                  symbol?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name symbol?,
                   :type :defn,
                   :qname clojure.core/symbol?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 562},
                  when-some
                  {:ns clojure.core,
                   :name when-some,
                   :type :defn,
                   :qname clojure.core/when-some,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1896},
                  unchecked-char
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name unchecked-char,
                   :type :defn,
                   :qname clojure.core/unchecked-char,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3528},
                  >1?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name >1?,
                   :type :defn,
                   :qname clojure.core/>1?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 969},
                  ->>
                  {:ns clojure.core,
                   :name ->>,
                   :type :defn,
                   :qname clojure.core/->>,
                   :var-args-min-arity 1,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 1693},
                  future-cancel
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name future-cancel,
                   :type :defn,
                   :qname clojure.core/future-cancel,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 7000},
                  var-get
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name var-get,
                   :type :defn,
                   :qname clojure.core/var-get,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 4327},
                  commute
                  {:ns clojure.core,
                   :name commute,
                   :type :defn,
                   :qname clojure.core/commute,
                   :var-args-min-arity 2,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 2422},
                  coll?
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name coll?,
                   :type :defn,
                   :qname clojure.core/coll?,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6213},
                  get-in
                  {:fixed-arities #{3 2},
                   :ns clojure.core,
                   :name get-in,
                   :type :defn,
                   :qname clojure.core/get-in,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 6142},
                  denominator
                  {:fixed-arities #{1},
                   :ns clojure.core,
                   :name denominator,
                   :type :defn,
                   :qname clojure.core/denominator,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 3590},
                  refer-clojure
                  {:ns clojure.core,
                   :name refer-clojure,
                   :type :defn,
                   :qname clojure.core/refer-clojure,
                   :var-args-min-arity 0,
                   :lang :clj,
                   :filename "clojure/core.clj",
                   :col 1,
                   :row 5822}}))
;;;; Scratch

(comment
  (require '[clj-kondo.impl.cache :as cache])
  (cache/from-cache-1 ".clj-kondo/.cache/2019.04.10-alpha" :clj 'clojure.core))
