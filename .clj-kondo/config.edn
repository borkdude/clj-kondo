{;; no linting inside calls to these functions/macros
 ;; note that you will still get an arity error when calling the fn/macro itself incorrectly
 :skip-args [#_clojure.core/comment #_cljs.core/comment]
 :skip-comments false ;; convient shorthand for :skip-args [clojure.core/comment cljs.core/comment]
 ;; linter level can be tweaked by setting :level to :error, :warn or :info (or any other keyword)
 ;; all linters are enabled by default, but can be turned off by setting :level to :off.
 :linters {:invalid-arity {:level :error
                           :skip-args [#_riemann.test/test-stream]}
           :private-call {:level :error}
           :inline-def {:level :warning}
           :redundant-do {:level :warning}
           :redundant-let {:level :warning}
           :cond-without-else {:level :warning}
           :missing-test-assertion {:level :warning}
           :duplicate-map-key {:level :error}
           :duplicate-set-key {:level :error}
           :missing-map-value {:level :error}
           :invalid-bindings {:level :error}}
 :output {;; set to truthy to print progress while linting
          :show-progress false
          ;; output can be filtered and removed by regex on filename. empty options leave the output untouched.
          :include-files [] #_["^src" "^test"]
          :exclude-files [] #_["^cljs/core"]
          ;; the output pattern can be altered using a template. use {{LEVEL}} to print the level in capitals.
          :pattern "{{filename}}:{{row}}:{{col}}: {{level}}: {{message}}"}}
